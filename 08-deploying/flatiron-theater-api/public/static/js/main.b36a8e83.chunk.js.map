{"version":3,"sources":["components/ProductionCard.js","components/ProductionContainer.js","components/ProductionForm.js","components/Navigation.js","components/ProductionDetail.js","components/Auth.js","components/LogIn.js","components/App.js","index.js"],"names":["ProductionCard","production","title","budget","genre","image","id","console","log","to","className","style","width","src","ProductionContainer","productions","map","ProductionForm","handlePost","errors","useState","director","description","formData","setFormData","e","onSubmit","preventDefault","ongoing","type","value","onChange","target","rows","cols","Navigation","cart","setIsAuthenticated","setUser","user","onClick","fetch","method","then","admin","ProductionDetail","setCart","crew_members","performers_and_roles","setProduction","params","useParams","useEffect","res","json","data","Auth","username","setUsername","email","setEmail","password","setPassword","setErrors","name","headers","body","JSON","stringify","ok","Object","keys","key","index","values","Login","error","setError","App","setProductions","isAuthenticated","exact","path","obj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b36a8e83.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\n\nfunction ProductionCard({production}) {\n    const {title, budget, genre, image, id} = production\n    console.log(production)\n    return (\n      <Link to={`/productions/${id}`}>\n      <tr className=\"table-row\" >\n       <td>{title}</td>\n       <td>{genre}</td>\n       <td>$ {budget}</td>\n       <td><img style={{width:'100px'}} src={image}/></td>\n      </tr>\n      </Link>\n    );\n  }\n  \n  export default ProductionCard;","import ProductionCard from './ProductionCard'\n\n\nfunction ProductionContainer({productions}) {\n    return (\n     <div>\n         <table>{productions.map(production => <ProductionCard  key={production.id} production={production} />)}</table>\n     </div>\n    );\n  }\n  \n  export default ProductionContainer;","import React, { useState} from 'react'\n\nfunction ProductionForm({handlePost, errors}) {\n  const [formData, setFormData] = useState({\n    title:'',\n    genre:'',\n    budget:'',\n    image:'',\n    director:'',\n    description:''\n  })\n\n\n  function onSubmit(e){\n    e.preventDefault()\n    const production = {\n      title: formData.title,\n      genre: formData.genre,\n      budget: formData.budget,\n      image: formData.image,\n      director: formData.director,\n      description: formData.description,\n      ongoing:true\n    }\n    handlePost(production)\n  }\n    return (\n      <div className=\"App\">\n        {errors?errors.map(e => <div>{e}</div>):null}\n       <form onSubmit={onSubmit}>\n       <label>\n          Title\n          <input type=\"text\" value={formData.title} onChange={(e) => setFormData({...formData, title: e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Genre\n          <input type=\"text\" value={formData.genre} onChange={(e) => setFormData({...formData, genre: e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Budget\n          <input type=\"number\" value={formData.budget} onChange={(e) => setFormData({...formData, budget: e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Image\n          <input type=\"text\" value={formData.image} onChange={(e) => setFormData({...formData, image: e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Director\n          <input type=\"text\" value={formData.director} onChange={(e) => setFormData({...formData, director: e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Description\n          <textarea type=\"text\" rows=\"4\" cols=\"50\" value={formData.description} onChange={(e) => setFormData({...formData, description: e.target.value})} />\n        </label>\n        <br/>\n        <input type=\"submit\" value=\"Submit Production\" />\n       </form>\n      </div>\n    );\n  }\n  \n  export default ProductionForm;","import {Link} from \"react-router-dom\";\n\nfunction Navigation({cart, setIsAuthenticated, setUser, user}) {\n    console.log(user)\n    const logout = () => {\n        fetch('/logout',{\n            method:'DELETE'\n        })\n        .then(()=>{\n            setIsAuthenticated(false)\n            setUser(null)\n        })\n    }\n    return (\n        <> \n   \n         <h1>Flatiron Theater Company</h1>\n         <div>\n            <button onClick={logout}>Logout</button>\n           <h1><Link to=\"/\"> Home</Link></h1>\n           {user&&user.admin?<h1><Link to=\"/productions/new\">New Production</Link></h1>:null}\n\n         </div>\n\n        </>\n    )\n}\n\nexport default Navigation;","import { useParams } from \"react-router-dom\";\nimport {useEffect, useState} from 'react'\nfunction ProductionDetail({cart, setCart}) {\nconst [production, setProduction] = useState({crew_members:[], performers_and_roles:[]})\n  const params = useParams();\n  useEffect(()=>{\n    fetch(`/productions/${params.id}`)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      setProduction(data)\n    })\n  },[])\n  \n \n\n    const {title, budget, genre, image,description, crew_members, performers_and_roles} = production\n    return (\n      <div className=\"card\" >\n      <h1>{title}</h1>\n       <h3>{genre}</h3>\n       <h3>{budget}</h3>\n       <img style={{width:'100px'}} src={image}/>\n       <p>{description}</p>\n       <button >Buy Ticket</button>\n      </div>\n    );\n  }\n  \n  export default ProductionDetail;","import React, {useState} from 'react'\n\nfunction Auth({setUser, setIsAuthenticated}) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n   \n    const [errors, setErrors] = useState([])\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            name: username,\n            email,\n            password\n        }\n       \n        fetch(`/users`,{\n          method:'POST',\n          headers:{'Content-Type': 'application/json'},\n          body:JSON.stringify(user)\n        })\n        .then(res => {\n          if(res.ok){\n            res.json()\n            .then(user=>{\n              setUser(user)\n              setIsAuthenticated(true)\n            })\n            \n          } else {\n            res.json()\n            .then(json => setErrors(json.errors))\n          }\n        })\n    }\n    return (\n        <> \n        <h1>Sign Up</h1>\n        <form onSubmit={onSubmit}>\n        <label>\n          Username\n   \n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label>\n         email\n    \n        <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        </label>\n        <label>\n         Password\n    \n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n       \n        <input type=\"submit\" value=\"Sign up!\" />\n      </form>\n      { Object.keys(errors) ? Object.keys(errors).map((key, index) => <div>{key+': ' + Object.values(errors)[index]}</div>) : null }\n      </>\n    )\n}\n\nexport default Auth;\n","import React, {useState} from 'react'\nimport Auth from './Auth'\n\n\nfunction Login({setUser,setIsAuthenticated}) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n   \n    const [error, setError] = useState([])\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            username: username,\n            password\n        }\n       \n        fetch(`/login`,{\n          method:'POST',\n          headers:{'Content-Type': 'application/json'},\n          body:JSON.stringify(user)\n        })\n        .then(res => {\n          if(res.ok){\n            res.json()\n            .then(user=>{\n              setUser(user)\n              setIsAuthenticated(true)\n            })\n            \n          } else {\n            res.json()\n            .then(json => setError(json.error))\n          }\n        })\n    }\n    return (\n      \n        <> \n        <h1>Flatiron Theater Company</h1>\n        <h1>Login</h1>\n        <form onSubmit={onSubmit}>\n        <label>\n          Username\n   \n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label>\n         Password\n    \n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n       \n        <input type=\"submit\" value=\"Login!\" />\n      </form>\n      {error?<div>{error}</div>:null}\n      <Auth setUser={setUser} setIsAuthenticated={setUser}/>\n        </>\n    )\n}\n\nexport default Login;\n","import { Route, Switch } from \"react-router-dom\";\n\nimport {useEffect, useState} from 'react'\nimport ProductionContainer from './ProductionContainer'\nimport ProductionForm from './ProductionForm'\nimport Navigation from './Navigation'\nimport ProductionDetail from './ProductionDetail'\nimport Auth from './Auth'\nimport Login from './LogIn'\n\nfunction App() {\n  const [productions, setProductions] = useState([])\n  const [errors, setErrors] = useState(false)\n  const [cart, setCart] = useState([])\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch('/authorized_user')\n    .then((res) => {\n      if (res.ok) {\n        res.json()\n        .then((user) => {\n          setIsAuthenticated(true);\n          setUser(user);\n        });\n      }\n    });\n\n    fetch('/productions')\n    .then(res => res.json())\n    .then(setProductions);\n\n  },[]);\n\n  function handlePost(obj){\n      fetch('/productions',{\n        method:'POST',\n        headers: {'Content-Type': 'application/json'},\n        body:JSON.stringify(obj)\n      })\n      .then(res => res.json())\n      .then(data => {\n        if(data.errors){\n          setErrors(data.errors)\n        } else {\n          setProductions([...productions,data])\n        }\n      })\n  }\n\n  // Reroute user to <Login /> Component if not authenticated\n  if (!isAuthenticated) return <Login error={'please login'} setIsAuthenticated={setIsAuthenticated} setUser={setUser} />;\n\n  return (\n    <>\n    <Navigation cart={cart} setIsAuthenticated={setIsAuthenticated} setUser={setUser} user={user}/>\n    <Switch>\n    <Route exact path=\"/\">\n      <ProductionContainer productions={productions}/>\n    </Route>\n    <Route exact path=\"/productions/new\">\n      <ProductionForm handlePost={handlePost} errors={errors} />\n    </Route>\n    <Route exact path=\"/productions/:id\">\n        <ProductionDetail cart={cart} setCart={setCart}/>\n    </Route>\n    <Route path=\"/sign_up\">\n          <Auth />\n    </Route>\n    <Route path=\"/login\">\n          <Login />\n    </Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}